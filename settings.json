{
  "vim.leader": ",",
  //
  // NORMAL MODE
  //
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "<leader>",
        ".",
        "t",
        "c"
      ],
      "commands": [
        // "workbench.action.files.copyPathOfActiveFile"
        "renameFile"
      ]
    },
    {
      /* Genera un test */
      "before": [
        "<leader>",
        ",",
        "a",
        "t"
      ],
      "commands": [
        "github.copilot.interactiveEditor.generateTests"
      ]
    },
    {
      /* Guardar todo */
      "before": [
        "<leader>",
        ".",
        ",",
        ".",
        "a"
      ],
      "commands": [
        "workbench.action.files.saveAll"
      ]
    },
    {
      "before": [
        "<leader>",
        ",",
        "q"
      ],
      "commands": [
        "editor.action.quickFix"
      ]
    },
    // {
    //   /* Guardar a una mano sin formatear */
    //   "before": [
    //     "<leader>",
    //     ".",
    //     "o"
    //   ],
    //   "commands": [
    //     "workbench.action.files.saveWithoutFormatting"
    //   ]
    // },
    {
      /* Guardar sin formatear */
      "before": [
        "<leader>",
        ".",
        "w"
      ],
      "commands": [
        "workbench.action.files.saveWithoutFormatting"
      ]
    },
    {
      /* Va al inicio en teclado español */
      "before": [
        "?",
      ],
      "after": [
        "_"
      ]
    },
    {
      /* Toggle word wrap */
      "before": [
        "<leader>",
        ".",
        "z"
      ],
      "commands": [
        "editor.action.toggleWordWrap"
      ]
    },
    {
      /* Va a un marcador si es que existe */
      "before": [
        "<leader>",
        ".",
        "<"
      ],
      "after": [
        "'"
      ]
    },
    {
      /* Va a un marcador si es que existe en teclado español */
      "before": [
        "<leader>",
        ".",
        ","
      ],
      "after": [
        "'"
      ]
    },
    {
      /* Sugerencia cuando se esta en modo normal */
      "before": [
        "<leader>",
        ",",
        "<tab>"
      ],
      "commands": [
        "editor.action.triggerSuggest"
      ],
      "when": [
        "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
      ]
    },
    {
      /* Juntar lineas */
      "before": [
        "<leader>",
        "<leader>",
        "k"
      ],
      "commands": [
        "editor.action.joinLines"
      ]
    },
    // {
    //   /* Toggle folding */
    //   "before": [
    //     "<leader>",
    //     ",",
    //     "k",
    //   ],
    //   "commands": [
    //     "editor.toggleFold",
    //   ]
    // },
    {
      /* Pegar */
      "before": [
        "<leader>",
        ".",
        "v"
      ],
      "commands": [
        "editor.action.clipboardPasteAction"
      ]
    },
    // {
    //   /* Nuevo array */
    //   "before": [
    //     "<leader>",
    //     "a",
    //     ","
    //   ],
    //   "after": [
    //     "a",
    //     "[",
    //     "<Enter>"
    //   ]
    // },
    // {
    //   /* Nuevo item */
    //   "before": [
    //     "<leader>",
    //     "n",
    //     ","
    //   ],
    //   "after": [
    //     "$",
    //     "a",
    //     ",",
    //     "<Enter>",
    //     "'"
    //   ]
    // },
    {
      /* Saltar entre las lineas en blanco para abajo */
      "before": [
        "W"
      ],
      "after": [
        "{"
      ]
    },
    {
      /* Saltar entre las lineas en blanco para arriba */
      "before": [
        "E"
      ],
      "after": [
        "}"
      ]
    },
    {
      /* Formatear el documento con el formateado por defecto */
      "before": [
        "<leader>",
        "<leader>",
        "f"
      ],
      "commands": [
        "editor.action.format"
      ]
    },
    {
      /* Snippet helper para utilizar el: '<' en español  */
      "before": [
        "<leader>",
        "z"
      ],
      "after": [
        "i",
        "<"
      ]
    },
    {
      /* Comparar el archivo usando git y ver sus cambios */
      "before": [
        "<leader>",
        "<leader>",
        "g",
        "h"
      ],
      "commands": [
        "git.openChange"
      ]
    },
    {
      /* Revertir el cambio en el que se esta posicionado */
      "before": [
        "<leader>",
        "<leader>",
        "g",
        "d"
      ],
      "commands": [
        "git.revertSelectedRanges"
      ]
    },
    {
      /* Abrir el archivo actual en otra ventana */
      "before": [
        "<leader>",
        "<leader>",
        "n"
      ],
      "commands": [
        "workbench.action.files.showOpenedFileInNewWindow"
      ]
    },
    {
      /* Unir la linea de abajo con la de arriba */
      "before": [
        "<leader>",
        ".",
        "/",
        "m"
      ],
      "after": [
        "J"
      ]
    },
    {
      /* Moverse a la izquierda en entre las ventanas abiertas */
      "before": [
        "J"
      ],
      "after": [
        "g",
        "T"
      ]
    },
    {
      /* Moverse a la derecha entre las ventanas abiertas */
      "before": [
        "L"
      ],
      "after": [
        "g",
        "t"
      ]
    },
    {
      /* Cerrar los otros editores */
      "before": [
        "<leader>",
        "<leader>",
        "o"
      ],
      "commands": [
        "workbench.action.closeOtherEditors"
      ]
    },
    {
      /* Abrir la paleta de comandos */
      "before": [
        "<leader>",
        "<leader>",
        "c"
      ],
      "commands": [
        "workbench.action.showCommands"
      ]
    },
    {
      /* Abrir el panel de referencias de la variable seleccionada */
      "before": [
        "<leader>",
        "g",
        "t"
      ],
      "commands": [
        "editor.action.goToReferences"
      ]
    },
    {
      /* Mostrar la definición a un costado, es parecida a la anterior */
      "before": [
        "<leader>",
        ",",
        "g",
        "a"
      ],
      "commands": [
        "editor.action.revealDefinitionAside"
      ]
    },
    {
      /* Ir a una definición */
      "before": [
        "<leader>",
        "<leader>",
        "g"
      ],
      "commands": [
        "editor.action.revealDefinition"
      ]
    },
    {
      /* Abrir un archivo */
      "before": [
        "<leader>",
        "m"
      ],
      "commands": [
        "workbench.action.quickOpen"
      ]
    },
    {
      /* Abrir un archivo de los editores actuales */
      "before": [
        "<leader>",
        "<leader>",
        "a",
        "g"
      ],
      "commands": [
        "workbench.action.showEditorsInActiveGroup"
      ]
    },
    {
      /* Abrir el explorador de archivos */
      "before": [
        "<leader>",
        "<leader>",
        "t"
      ],
      "commands": [
        "workbench.action.toggleSidebarVisibility"
      ]
    },
    {
      /* Revelar el archivo en la barra lateral de directorios */
      "before": [
        "<leader>",
        "<leader>",
        "r",
        "<Enter>"
      ],
      "commands": [
        "revealInExplorer"
      ]
    },
    {
      /* Mostrar el archivo actual en el explorador de windows */
      "before": [
        "<leader>",
        "<leader>",
        "r",
        "f"
      ],
      "commands": [
        "workbench.action.files.revealActiveFileInWindows"
      ]
    },
    {
      /* Dividir horizontalmente el editor */
      "before": [
        "<leader>",
        "t",
        "h"
      ],
      "commands": [
        "workbench.action.splitEditorDown"
      ]
    },
    {
      /* Dividir verticalmente el editor */
      "before": [
        "<leader>",
        "t",
        "v"
      ],
      "commands": [
        "workbench.action.splitEditor"
      ]
    },
    {
      /* Abrir el control de búsqueda */
      "before": [
        "<leader>",
        "e",
        "f"
      ],
      "commands": [
        "actions.find"
      ]
    },
    {
      /* Abrir el control de búsqueda global */
      "before": [
        "<leader>",
        "<leader>",
        "s"
      ],
      "commands": [
        "workbench.view.search"
      ]
    },
    {
      /* Encontrar y reemplazar */
      "before": [
        "<leader>",
        "e",
        "r"
      ],
      "commands": [
        "actions.find",
        "editor.action.startFindReplaceAction"
      ]
    },
    {
      /* Seleccionar todas las ocurrencias encontradas */
      "before": [
        "<leader>",
        "e",
        "a"
      ],
      "commands": [
        "actions.find",
        "editor.action.nextMatchFindAction",
        "search.action.openInEditor"
      ]
    },
    {
      /* Seleccionar un bloque entero de paréntesis, incluyendo la linea */
      "before": [
        "<leader>",
        "b",
        "p"
      ],
      "after": [
        "v",
        "a",
        "("
      ]
    },
    {
      /* Seleccionar un bloque entero de llaves, incluyendo las llaves */
      "before": [
        "<leader>",
        "b",
        "a"
      ],
      "after": [
        "V",
        "a",
        "{"
      ]
    },
    {
      /* Seleccionar un bloque de llaves sin incluir la linea, incluyendo las llaves */
      "before": [
        "<leader>",
        "b",
        "w"
      ],
      "after": [
        "v",
        "a",
        "{"
      ]
    },
    {
      /* Seleccionar una sección de bloque de llaves, sin incluir las llaves */
      "before": [
        "<leader>",
        "b",
        "s"
      ],
      "after": [
        "v",
        "i",
        "{"
      ]
    },
    {
      /* Seleccionar un bloque de corchetes, incluyendo la linea */
      "before": [
        "<leader>",
        "b",
        "e"
      ],
      "after": [
        "V",
        "a",
        "["
      ]
    },
    {
      /* Seleccionar un bloque de corchetes, incluyendo los corchetes */
      "before": [
        "<leader>",
        "b",
        "g"
      ],
      "after": [
        "v",
        "a",
        "["
      ]
    },
    {
      /* Seleccionar un bloque de corchetes, sin incluyendo los corchetes */
      "before": [
        "<leader>",
        "b",
        "i"
      ],
      "after": [
        "v",
        "i",
        "["
      ]
    },
    {
      /* Hace un toggle para encontrar todas las ocurrencias */
      "before": [
        "<leader>",
        "t",
        "w"
      ],
      "commands": [
        "toggleFindWholeWord"
      ]
    },
    {
      /* Hace un toggle para encontrar entre los casos sensibles a minúsculas */
      "before": [
        "<leader>",
        "t",
        "s"
      ],
      "commands": [
        "toggleFindCaseSensitive"
      ]
    },
    {
      /* Selecciona una linea completa */
      "before": [
        "<leader>",
        ".",
        "a"
      ],
      "after": [
        "_",
        "<C-v>",
        "$"
      ]
    },
    {
      /* Pega el contenido copiado en la siguiente linea */
      "before": [
        "<leader>",
        "p"
      ],
      "after": [
        "$",
        "<Esc>",
        "p"
      ]
    },
    {
      // Start of line
      "before": [
        "?"
      ],
      "after": [
        "_"
      ]
    },
    {
      // Word coincidence
      "before": [
        "<leader>",
        "s"
      ],
      "after": [
        "*"
      ]
    },
    {
      // Guardado rápido
      // "before": ["<leader>", ".", "e"],
      "before": [
        "<leader>",
        "w"
      ],
      "commands": [
        ":w!"
      ]
    },
    // {
    //   /* Guardado rápido sin formatear */
    //   "before": ["<leader>", "w"],
    //   "after": ["<Esc>"],
    //   "commands": ["workbench.action.files.saveWithoutFormatting"]
    // },
    {
      // Add a new line below
      "before": [
        "g",
        "i"
      ],
      "after": [
        "o",
        "<Esc>",
        "k"
      ]
    },
    {
      // Fast quit
      "before": [
        "<leader>",
        "q"
      ],
      "commands": [
        ":q!"
      ]
    },
    {
      // Rápida búsqueda en español
      "before": [
        "-"
      ],
      "after": [
        "/"
      ]
    },
    {
      // Add comma and new line
      "before": [
        "ñ",
        "v"
      ],
      "after": [
        "A",
        ",",
        "<Esc>",
        "o"
      ]
    },
    {
      /* Agrega una coma al final de la línea y hace un salto de línea */
      "before": [
        ";",
        "v"
      ],
      "after": [
        "A",
        ",",
        "<Esc>",
        "o"
      ]
    },
    {
      /* Elimina el último carácter de la línea en español */
      "before": [
        "ñ",
        "r",
        "<Enter>"
      ],
      "after": [
        "$",
        "x",
        "_"
      ]
    },
    {
      /* Agrega una coma al final de la línea en español */
      "before": [
        "ñ",
        "a"
      ],
      "after": [
        "A",
        ",",
        "<Esc>",
        "_"
      ]
    },
    {
      /* Agrega una coma al final de la línea */
      "before": [
        ";",
        "a"
      ],
      "after": [
        "A",
        ",",
        "<Esc>",
        "_"
      ]
    },
    {
      /* Agrega un espacio entre 2 letras */
      "before": [
        "<leader>",
        "<space>"
      ],
      "after": [
        "a",
        "<space>",
        "<Esc>",
        "h"
      ]
    },
    {
      /* Agrega un punto y coma al final de una linea, cuando se está en idioma español */
      "before": [
        "ñ",
        "e"
      ],
      "after": [
        "A",
        ";",
        "<Esc>"
      ]
    },
    {
      /* Agrega un punto y coma al final de una linea */
      "before": [
        ";",
        ";"
      ],
      "after": [
        "A",
        ";",
        "<Esc>"
      ]
    },
    {
      /* Elimina el ultimo carácter de una linea */
      "before": [
        ";",
        "r",
        "r"
      ],
      "after": [
        "$",
        "x",
        "_"
      ]
    },
    {
      /* Comenta una linea con: // */
      "before": [
        "<leader>",
        "c"
      ],
      "commands": [
        "editor.action.commentLine"
      ]
    },
    {
      /* Adiciona una linea de comentario como esta: // */
      "before": [
        "<leader>",
        "a",
        "c"
      ],
      "commands": [
        "editor.action.addCommentLine"
      ]
    },
    {
      /* Es un comentario de un bloque, como este mismo */
      "before": [
        "<leader>",
        "b",
        "c"
      ],
      "commands": [
        "editor.action.blockComment"
      ],
      "after": [
        "i"
      ]
    },
    {
      // Search, find and select current word
      "before": [
        "<leader>",
        "f",
        ","
      ],
      "commands": [
        "actions.find"
      ]
    },
    // {
    //   /* Next panel solution */
    //   "before": [
    //     "<leader>",
    //     ",",
    //     "]"
    //   ],
    //   "commands": [
    //     "github.copilot.nextPanelSolution"
    //   ]
    // },
  ],
  //
  // INSERT MODE
  //
  "vim.insertModeKeyBindingsNonRecursive": [
    {
      /* Guardar sin formatear */
      "before": [
        "<leader>",
        ".",
        "w"
      ],
      "commands": [
        "workbench.action.files.saveWithoutFormatting"
      ]
    },
    {
      /* GitHub copilot, suggest solution */
      "before": [
        "<leader>",
        ",",
        "g"
      ],
      "commands": [
        "github.copilot.generate"
      ]
    },
    {
      /* Github copilot suggest inline */
      "before": [
        "<leader>",
        ".",
        "t",
      ],
      "commands": [
        "editor.action.inlineSuggest.trigger"
      ]
    },
    {
      "before": [
        "<leader>",
        ".",
        "v",
      ],
      "commands": [
        "editor.action.clipboardPasteAction"
      ]
    },
    {
      /* Cuerpo de una función anónima */
      "before": [
        "<leader>",
        "a",
        "f"
      ],
      "after": [
        "<space>",
        "=",
        ">",
        "<space>",
        "{",
        "<Enter>"
      ]
    },
    {
      /* Es un comentario de un bloque, como este mismo */
      "before": [
        "<leader>",
        "b",
        "c"
      ],
      "commands": [
        "editor.action.blockComment"
      ]
    },
    {
      /* Abre un nuevo paréntesis */
      "before": [
        "<leader>",
        "a",
        "<Space>"
      ],
      "after": [
        "("
      ]
    },
    {
      /* Nuevo array mientras se escribe */
      "before": [
        "<leader>",
        "a",
        ","
      ],
      "after": [
        "[",
        "<Enter>"
      ]
    },
    {
      /* Nuevo item mientras se escribe */
      "before": [
        "<leader>",
        "n",
        ","
      ],
      "after": [
        ",",
        "<Enter>",
        "'"
      ]
    },
    {
      /* Escribe el mayor que */
      "before": [
        "<leader>",
        "<leader>",
        "z"
      ],
      "after": [
        ">"
      ]
    },
    {
      /* Escribe el menor que */
      "before": [
        "<leader>",
        "z"
      ],
      "after": [
        "<"
      ]
    },
    {
      /* Cambia a modo normal en vim */
      "before": [
        "j",
        "k"
      ],
      "after": [
        "<Esc>"
      ]
    },
    {
      /* Modo normal */
      "before": [
        "J",
        "K"
      ],
      "after": [
        "<Esc>"
      ]
    },
    // {
    //   /* Guardado rápido */
    //   "before": ["<leader>", ".", "e"],
    //   "after": ["<Esc>"],
    //   "commands": [":w!"]
    // },
    // {
    //   /* Guardado rápido sin formatear */
    //   "before": ["<leader>", "w"],
    //   "after": ["<Esc>"],
    //   "commands": ["workbench.action.files.saveWithoutFormatting"]
    // },
    {
      /* Guardado rápido con formatear */
      "before": [
        "<leader>",
        "w"
      ],
      "after": [
        "<Esc>"
      ],
      "commands": [
        ":w!"
      ]
    },
    {
      /* Sugerencia cuando se esta en modo insertar */
      "before": [
        "<leader>",
        ",",
        "<"
      ],
      "commands": [
        "editor.action.triggerSuggest"
      ],
      "when": [
        "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
      ]
    },
    {
      /* Sugerencia cuando se esta en modo insertar en teclado español */
      "before": [
        "<leader>",
        ",",
        ";"
      ],
      "commands": [
        "editor.action.triggerSuggest"
      ],
      "when": [
        "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
      ]
    },
    {
      /* Agrega una coma al final de la linea y agrega una nueva linea */
      "before": [
        "<leader>",
        "e"
      ],
      "after": [
        "<Esc>",
        "A",
        ",",
        "<cr>"
      ]
    },
    {
      /* Hace un toggle a un comentario en modo insert */
      "before": [
        "<leader>",
        "c"
      ],
      "commands": [
        "editor.action.commentLine"
      ]
    }
  ],
  //
  // VISUAL MODE
  //
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      /* code snap */
      "before": [
        "<leader>",
        ".",
        "m",
        "m"
      ],
      "commands": [
        "codesnap.start"
      ]
    },
    {
      "before": [
        "<leader>",
        ".",
        "c"
      ],
      "commands": [
        "editor.action.clipboardCopyAction"
      ]
    },
    {
      /* Engrapar algo cuando se está seleccionado  */
      "before": [
        "<leader>",
        "s"
      ],
      "after": [
        "S"
      ]
    },
    {
      /* Cambiar a modo normal */
      "before": [
        "j",
        "k"
      ],
      "after": [
        "<Esc>"
      ]
    },
    {
      /* Comentarios */
      "before": [
        "<leader>",
        "c"
      ],
      "commands": [
        "editor.action.commentLine"
      ]
    }
  ],
  "editor.smoothScrolling": true,
  "editor.mouseWheelScrollSensitivity": 3,
  "editor.tabSize": 2,
  "editor.cursorSmoothCaretAnimation": "on",
  "scss.lint.duplicateProperties": "error",
  "[vue]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "vetur.format.defaultFormatter.css": "none",
  "vetur.format.defaultFormatter.js": "prettier-eslint",
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "vetur.grammar.customBlocks": {
    "docs": "md",
    "i18n": "json",
    "preview-props": "json"
  },
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.cursorSurroundingLinesStyle": "all",
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "vetur.completion.autoImport": false,
  "editor.renderWhitespace": "none",
  "[dart]": {
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.selectionHighlight": false,
    "editor.tabCompletion": "onlySnippets"
  },
  "security.workspace.trust.untrustedFiles": "open",
  "explorer.confirmDragAndDrop": false,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "eslint.format.enable": true,
  "javascript.format.insertSpaceBeforeFunctionParenthesis": true,
  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "[mdx]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.formatOnPaste": false,
  "terminal.external.windowsExec": "C:\\Program Files\\Git\\git-bash.exe",
  "prettier.printWidth": 80,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": true,
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "prettier.singleAttributePerLine": true,
  "prettier.bracketSameLine": true,
  "prettier.jsxSingleQuote": true,
  "typescript.format.insertSpaceBeforeFunctionParenthesis": true,
  // "[typescript]": {
  //   "editor.defaultFormatter": "esbenp.prettier-vscode"
  // },
  "gitlens.currentLine.scrollable": false,
  "editor.guides.indentation": false,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "cSpell.userWords": [
    "acreditable",
    "ACREDITABLE",
    "ajax",
    "Anel",
    "apikeys",
    "APPPATH",
    "arrachera",
    "Arrayable",
    "ASPNETCORE",
    "aspnetcorerazor",
    "astype",
    "autoloading",
    "autorizacion",
    "awesomelist",
    "axios",
    "bata",
    "bbva",
    "BBVA",
    "bgcolor",
    "Blazor",
    "bulkload",
    "bulma",
    "Buro",
    "buró",
    "Cascadia",
    "cedula",
    "cellspacing",
    "Chía",
    "Chilaquiles",
    "Chocomilk",
    "clabe",
    "clangarm",
    "composables",
    "conceptualización",
    "concubinario",
    "Conditionable",
    "Contáctanos",
    "csharpier",
    "csrf",
    "daniela",
    "Daniela",
    "DATEONLY",
    "Dayana",
    "Debugbar",
    "deepseek",
    "direccionar",
    "Dispatchable",
    "dockercompose",
    "dotnet",
    "dotnettools",
    "economica",
    "eduardo",
    "elvia",
    "Empanizado",
    "Enchilado",
    "Enfrijoladas",
    "Entregables",
    "esbenp",
    "Escalabilidad",
    "esnext",
    "Estocolmo",
    "facebook",
    "figma",
    "Fira",
    "firestore",
    "Fisica",
    "fiusha",
    "fontawesome",
    "formkit",
    "fortawesome",
    "gamificación",
    "Gamificación",
    "gitlab",
    "gsap",
    "headlessui",
    "Hostnames",
    "hstore",
    "huggingface",
    "instanciada",
    "invalidchars",
    "Iuse",
    "jetstream",
    "keras",
    "kpis",
    "laialab",
    "Laravel",
    "Lilisfood",
    "linkedin",
    "Livewire",
    "logrusorgru",
    "Maatwebsite",
    "mariadb",
    "Maximas",
    "montos",
    "montserrat",
    "Mpdf",
    "numbro",
    "nunito",
    "nuxt",
    "Nuxt",
    "nuxtjs",
    "okrs",
    "ollama",
    "olympia",
    "openai",
    "Paginación",
    "Parens",
    "Paycash",
    "PAYCASH",
    "perfilador",
    "perfilamiento",
    "Photoroom",
    "phpstan",
    "pigui",
    "Pigui",
    "pinia",
    "Planeación",
    "pldinterview",
    "postgres",
    "postgresql",
    "prebuild",
    "psicométricas",
    "qrcode",
    "Querétaro",
    "Reasignación",
    "redaxios",
    "redhat",
    "Reestablecer",
    "Referer",
    "Regenerativo",
    "regenerativos",
    "renderizado",
    "renderizar",
    "riesgosa",
    "roboto",
    "Roboto",
    "ROOTPATH",
    "rundll",
    "saira",
    "scminput",
    "secureheaders",
    "Segoe",
    "shopify",
    "sigmoide",
    "sobreescribe",
    "sordoceguera",
    "sordociegas",
    "sqlite",
    "stackblitz",
    "superadmin",
    "tailwindcss",
    "tcpdf",
    "TCPDF",
    "Tekylab",
    "tensorflow",
    "toastify",
    "Tokenización",
    "twilio",
    "typeit",
    "typeorm",
    "ucrt",
    "Ulises",
    "unicode",
    "unref",
    "unsplash",
    "Uribe",
    "uuidv",
    "UUIDV",
    "vcentered",
    "verifíquelo",
    "vetur",
    "vmargs",
    "vuefire",
    "vuesax",
    "Vuesax",
    "vuetify",
    "vuex",
    "Vuex",
    "vuexfire",
    "webp",
    "websockets",
    "Weetrust",
    "whatsapp",
    "xampp",
    "youtube",
    "yoyo",
    "Zarape",
    "zustand"
  ],
  "github.copilot.enable": {
    "*": true,
    "plaintext": true,
    "markdown": true,
    "scminput": false,
    "yaml": false
  },
  "editor.tabCompletion": "on",
  "editor.linkedEditing": true,
  "cSpell.language": "en,es-ES",
  "terminal.integrated.env.windows": {},
  "settingsSync.ignoredSettings": [
    "-php.validate.executablePath"
  ],
  "php-built-in-server.phpExecutable": "C:\\xampp\\php\\php.exe",
  "[xml]": {
    "editor.defaultFormatter": "redhat.vscode-xml"
  },
  "go.toolsManagement.autoUpdate": true,
  "xml.server.vmargs": "-Xmx128M",
  "cmake.additionalCompilerSearchDirs": [
    "C:/msys64/mingw32/bin",
    "C:/msys64/mingw64/bin",
    "C:/msys64/clang32/bin",
    "C:/msys64/clang64/bin",
    "C:/msys64/clangarm64/bin",
    "C:/msys64/ucrt64/bin"
  ],
  "editor.fontLigatures": true,
  "[dockercompose]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "php.validate.enable": true,
  "php.suggest.basic": true,
  "php.executables": {
    "8.1.0": "C:\\xampp\\php\\php.exe"
  },
  "php.executablePath": "C:\\xampp\\php\\php.exe",
  "php.version": "8.1.0",
  "editor.formatOnSaveMode": "modifications",
  // Muestra el inicio de la linea en la que se esta escribiendo
  "gitlens.graph.scrollMarkers.additionalTypes": [
    "localBranches",
    "stashes",
    "remoteBranches"
  ],
  "gitlens.graph.minimap.additionalTypes": [
    "localBranches",
    "stashes",
    "remoteBranches",
    "tags"
  ],
  "gitlens.ai.experimental.openai.model": "gpt-4",
  "console-ninja.featureSet": "Community",
  "prettier.endOfLine": "auto",
  "files.eol": "\n",
  "[blade]": {
    "editor.formatOnSave": false,
    "editor.formatOnSaveMode": "modifications",
    "editor.defaultFormatter": null
  },
  "github.copilot.editor.enableCodeActions": false,
  "editor.fontFamily": "'Cascadia Code'",
  "omnisharp.sdkIncludePrereleases": false,
  "files.associations": {
    "*.razor": "razor"
  },
  "workbench.panel.defaultLocation": "bottom",
  "[csharp]": {
    "editor.defaultFormatter": "ms-dotnettools.csharp"
  },
  "[php]": {
    "editor.defaultFormatter": "DEVSENSE.phptools-vscode"
  },
  "enableTelemetry": false,
  "editor.experimental.asyncTokenization": true,
  "editor.cursorBlinking": "expand",
  "editor.bracketPairColorization.enabled": false,
  "editor.guides.bracketPairs": true,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": false,
  "typescript.preferences.importModuleSpecifierEnding": "js",
  "javascript.preferences.importModuleSpecifierEnding": "js",
  "javascript.inlayHints.parameterNames.enabled": "all",
  "javascript.inlayHints.enumMemberValues.enabled": true,
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,
  "javascript.inlayHints.parameterTypes.enabled": true,
  "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
  "javascript.inlayHints.variableTypes.enabled": true,
  "javascript.inlayHints.variableTypes.suppressWhenTypeMatchesName": true,
  "editor.inlayHints.enabled": "offUnlessPressed",
  "editor.inlayHints.fontFamily": "Jost",
  "editor.inlayHints.fontSize": 10,
  "editor.inlayHints.padding": true,
  "editor.minimap.maxColumn": 100,
  "editor.minimap.showSlider": "always",
  "window.menuBarVisibility": "hidden",
  "vscode-edge-devtools.webhintInstallNotification": true,
  "gitlens.launchpad.indicator.enabled": false,
  "indentRainbow.colorOnWhiteSpaceOnly": false,
  "editor.guides.highlightActiveBracketPair": true,
  "workbench.editor.untitled.labelFormat": "name",
  "window.commandCenter": false,
  "workbench.colorCustomizations": {
    // "tab.activeBorder": "#139dec",
    // "breadcrumb.foreground": "#fff",
    // "editor.background": "#000",
    // "editor.selectionBackground": "#10b9c569",
    "tab.activeBorderTop": "#03afff",
  },
  "codesnap.showWindowTitle": true,
  "codesnap.realLineNumbers": true,
  "codesnap.roundedCorners": true,
  "codesnap.shutterAction": "copy",
  "window.customTitleBarVisibility": "auto",
  "vscode-edge-devtools.headless": false,
  "codeium.enableConfig": {
    "*": true,
    "xml": true
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "workbench.activityBar.location": "bottom",
  "editor.acceptSuggestionOnCommitCharacter": false,
  "editor.acceptSuggestionOnEnter": "smart",
  "editor.gotoLocation.multipleDefinitions": "goto",
  "[tailwindcss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "redhat.telemetry.enabled": false,
  "workbench.colorTheme": "Monokai Pro",
  "extensions.ignoreRecommendations": true,
  "terminal.integrated.stickyScroll.enabled": true,
  "workbench.layoutControl.enabled": false,
  "tailwindcss-intellisense.trace.server": "verbose",
  "tailwindCSS.emmetCompletions": true,
  "editor.quickSuggestions": {
    "comments": "on",
    "strings": "on"
  },
  "terminal.integrated.suggest.enabled": true,
  "cSpell.ignorePaths": [
    "package-lock.json",
    "node_modules",
    "vscode-extension",
    ".git/{info,lfs,logs,refs,objects}/**",
    ".git/{index,*refs,*HEAD}",
    ".vscode",
    ".vscode-insiders",
    ".svg",
    "*.svg"
  ],
  "explorer.confirmDelete": false,
  "workbench.iconTheme": "Monokai Pro Icons",
}
